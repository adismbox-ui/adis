<?php
/**
 * V√©rification Rapide des Documents
 * 
 * Ce script v√©rifie rapidement l'√©tat des documents
 * et identifie les probl√®mes potentiels.
 */

require_once __DIR__ . '/vendor/autoload.php';

use Carbon\Carbon;
use App\Models\Document;
use App\Models\Apprenant;

// Initialiser Laravel
$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

echo "üîç V√©rification Rapide des Documents\n";
echo "===================================\n\n";

$now = Carbon::now();

// 1. √âtat g√©n√©ral
echo "üìä √âtat G√©n√©ral :\n";
$total = Document::count();
$envoyes = Document::where('envoye', true)->count();
$nonEnvoyes = Document::where('envoye', false)->count();
$enRetard = Document::where('date_envoi', '<', $now)->where('envoye', false)->count();
$programmes = Document::where('date_envoi', '>', $now)->where('envoye', false)->count();

echo "  - Total : {$total} document(s)\n";
echo "  - Envoy√©s : {$envoyes} document(s)\n";
echo "  - Non envoy√©s : {$nonEnvoyes} document(s)\n";
echo "  - En retard : {$enRetard} document(s)\n";
echo "  - Programm√©s : {$programmes} document(s)\n\n";

// 2. Documents en retard
if ($enRetard > 0) {
    echo "üö® DOCUMENTS EN RETARD :\n";
    $enRetardList = Document::where('date_envoi', '<', $now)
        ->where('envoye', false)
        ->with(['module', 'niveau'])
        ->get();
    
    foreach ($enRetardList as $d) {
        $retard = Carbon::parse($d->date_envoi)->diffInMinutes($now);
        echo "  - {$d->titre}\n";
        echo "    Date d'envoi : {$d->date_envoi}\n";
        echo "    Retard : {$retard} minutes\n";
        echo "    Module : " . ($d->module ? $d->module->titre : 'G√©n√©ral') . "\n";
        echo "    Niveau : " . ($d->niveau ? $d->niveau->nom : 'Non sp√©cifi√©') . "\n\n";
    }
}

// 3. Documents programm√©s
if ($programmes > 0) {
    echo "‚è∞ DOCUMENTS PROGRAMM√âS :\n";
    $programmesList = Document::where('date_envoi', '>', $now)
        ->where('envoye', false)
        ->with(['module', 'niveau'])
        ->orderBy('date_envoi', 'asc')
        ->get();
    
    foreach ($programmesList as $d) {
        $attente = Carbon::parse($d->date_envoi)->diffInMinutes($now);
        echo "  - {$d->titre}\n";
        echo "    Date d'envoi : {$d->date_envoi}\n";
        echo "    Attente : {$attente} minutes\n";
        echo "    Module : " . ($d->module ? $d->module->titre : 'G√©n√©ral') . "\n";
        echo "    Niveau : " . ($d->niveau ? $d->niveau->nom : 'Non sp√©cifi√©') . "\n\n";
    }
}

// 4. V√©rification des apprenants
echo "üë• V√©rification des Apprenants :\n";
$apprenants = Apprenant::with('utilisateur')->count();
echo "  - Total apprenants : {$apprenants}\n";

// 5. Recommandations
echo "\nüí° RECOMMANDATIONS :\n";

if ($enRetard > 0) {
    echo "  üö® {$enRetard} document(s) en retard - Lancez l'envoi imm√©diatement :\n";
    echo "     php artisan content:send-scheduled\n";
    echo "     ou\n";
    echo "     php surveillance_documents_automatique.php\n\n";
}

if ($programmes > 0) {
    echo "  ‚è∞ {$programmes} document(s) programm√©(s) - La surveillance automatique s'en occupera\n\n";
}

if ($enRetard == 0 && $programmes == 0) {
    echo "  ‚úÖ Aucun probl√®me d√©tect√© - Le syst√®me fonctionne correctement\n\n";
}

// 6. √âtat de la surveillance
echo "üîß √âTAT DE LA SURVEILLANCE :\n";
echo "  - Surveillance continue : php surveillance_documents_automatique.php\n";
echo "  - Commande artisan : php artisan content:send-scheduled\n";
echo "  - Test du syst√®me : php test_envoi_documents_automatique.php\n";
echo "  - Interface de d√©marrage : demarrer_surveillance_documents.bat\n\n";

echo "‚úÖ V√©rification termin√©e !\n"; 